name: Test Release (Minimal)

on:
  workflow_dispatch:
  push:
    tags:
      - 'test-v*'

jobs:
  test_build:
    name: Test build on Ubuntu
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
    - name: Checkout RMNpy
      uses: actions/checkout@v5

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies
      run: |
        sudo systemd-run --property="After=apt-daily.service apt-daily-upgrade.service" --wait /bin/true
        sudo apt-get update
        sudo apt-get install -y build-essential cmake pkg-config flex bison libopenblas-dev liblapacke-dev libcurl4-openssl-dev libomp5

    - name: Download dependencies
      run: |
        mkdir -p lib include/OCTypes include/SITypes include/RMNLib
        curl -L https://github.com/pjgrandinetti/OCTypes/releases/download/v0.1.0/libOCTypes-ubuntu-latest.x64.zip -o octypes-lib.zip
        curl -L https://github.com/pjgrandinetti/OCTypes/releases/download/v0.1.0/libOCTypes-headers.zip -o octypes-headers.zip
        curl -L https://github.com/pjgrandinetti/SITypes/releases/download/v0.1.0/libSITypes-ubuntu-latest.x64.zip -o sitypes-lib.zip
        curl -L https://github.com/pjgrandinetti/SITypes/releases/download/v0.1.0/libSITypes-headers.zip -o sitypes-headers.zip
        curl -L https://github.com/pjgrandinetti/RMNLib/releases/download/v0.1.0/libRMN-ubuntu-latest.x64.zip -o rmnlib-lib.zip
        curl -L https://github.com/pjgrandinetti/RMNLib/releases/download/v0.1.0/libRMN-headers.zip -o rmnlib-headers.zip
        unzip -o -j -q octypes-lib.zip -d lib/
        unzip -o -j -q octypes-headers.zip -d include/OCTypes/
        unzip -o -j -q sitypes-lib.zip -d lib/
        unzip -o -j -q sitypes-headers.zip -d include/SITypes/
        unzip -o -j -q rmnlib-lib.zip -d lib/
        unzip -o -q rmnlib-headers.zip -d .
        rm *.zip

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade "setuptools>=70" "wheel>=0.44" "build>=1.2.1" "Cython>=0.29.36" "numpy>=1.21"

    - name: Generate constants
      run: |
        make generate-constants

    - name: Build wheel and test auditwheel
      run: |
        python -m build --wheel --outdir dist-temp
        python -m pip install auditwheel
        mkdir -p dist
        echo "Testing auditwheel show:"
        auditwheel show dist-temp/*.whl
        echo "Testing auditwheel repair:"
        auditwheel repair --wheel-dir dist dist-temp/*.whl || echo "auditwheel repair failed"
        ls -la dist/

    - name: Test import
      run: |
        python -m pip install dist/*.whl
        python -c "import rmnpy; print('Import successful!')"

    - name: Upload test wheel
      uses: actions/upload-artifact@v4
      with:
        name: test-wheel
        path: dist/*.whl
