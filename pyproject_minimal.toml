# Minimal pyproject.toml for RMNpy - Phase 1 Testing
# Start simple, add complexity incrementally

[build-system]
requires = ["setuptools>=70", "wheel", "cibuildwheel>=2.21.0"]
build-backend = "setuptools.build_meta"

[tool.cibuildwheel]
# Start with Python 3.12 only - expand once basic builds work
build = "cp312-*"
skip = "pp* *-win32 *-manylinux_i686 *-musllinux_*"

# Build verbosity for debugging
build-verbosity = 1

# Linux: Start with minimal manylinux setup
[tool.cibuildwheel.linux]
manylinux-x86_64-image = "manylinux2014"
before-all = [
    "yum install -y flex bison curl-devel",
    # Build only OCTypes first - minimal test (robust tag detection)
    "OCTYPES_TAG=$(git ls-remote --tags --sort=-v:refname https://github.com/pjgrandinetti/OCTypes.git 2>/dev/null | grep -E 'refs/tags/v[0-9]' | head -1 | sed 's/.*refs\\/tags\\///' | sed 's/\\^{}.*//')",
    "echo \"Building OCTypes version: $OCTYPES_TAG\"",
    "git clone --depth 1 --branch $OCTYPES_TAG https://github.com/pjgrandinetti/OCTypes.git /tmp/octypes",
    "cd /tmp/octypes && make CC=gcc -j$(nproc) && make CC=gcc install INSTALL_DIR=/tmp/install",
]

[tool.cibuildwheel.linux.environment]
LD_LIBRARY_PATH = "/tmp/install/lib"

# macOS: Minimal setup (we know this platform works)
[tool.cibuildwheel.macos]
before-all = [
    "brew install flex bison",
    # Build only OCTypes first - minimal test (robust tag detection)
    "OCTYPES_TAG=$(git ls-remote --tags --sort=-v:refname https://github.com/pjgrandinetti/OCTypes.git 2>/dev/null | grep -E 'refs/tags/v[0-9]' | head -1 | sed 's/.*refs\\/tags\\///' | sed 's/\\^{}.*//')",
    "echo \"Building OCTypes version: $OCTYPES_TAG\"",
    "git clone --depth 1 --branch $OCTYPES_TAG https://github.com/pjgrandinetti/OCTypes.git /tmp/octypes",
    "cd /tmp/octypes && make CC=clang -j$(sysctl -n hw.ncpu) && make CC=clang install INSTALL_DIR=/tmp/install",
]

[tool.cibuildwheel.macos.environment]
MACOSX_DEPLOYMENT_TARGET = "13.0"
DYLD_LIBRARY_PATH = "/tmp/install/lib"

# Windows: CRITICAL - MinGW Python ONLY
[tool.cibuildwheel.windows]
# Only Python 3.12 (MinGW constraint)
build = "cp312-*"

# Minimal MSYS2 setup with STRICT MinGW Python
before-all = [
    # Install minimal MSYS2 packages
    "C:\\msys64\\usr\\bin\\pacman.exe -S --noconfirm mingw-w64-x86_64-toolchain mingw-w64-x86_64-python mingw-w64-x86_64-make bison flex git",
    # Build only OCTypes first - minimal test (robust tag detection)
    "C:\\msys64\\usr\\bin\\bash.exe -lc \"OCTYPES_TAG=$(git ls-remote --tags --sort=-v:refname https://github.com/pjgrandinetti/OCTypes.git 2>/dev/null | grep -E 'refs/tags/v[0-9]' | head -1 | sed 's/.*refs\\/tags\\///' | sed 's/\\^{}.*//') && echo \\\"Building OCTypes version: $OCTYPES_TAG\\\" && git clone --depth 1 --branch $OCTYPES_TAG https://github.com/pjgrandinetti/OCTypes.git /tmp/octypes\"",
    "C:\\msys64\\usr\\bin\\bash.exe -lc \"cd /tmp/octypes && PATH=/mingw64/bin:$PATH make CC=gcc -j4 && PATH=/mingw64/bin:$PATH make CC=gcc install INSTALL_DIR=/mingw64\"",
]

[tool.cibuildwheel.windows.environment]
# CRITICAL: Force MinGW Python usage - NO MSVC
PATH = "C:/msys64/mingw64/bin;C:/msys64/usr/bin;${PATH}"
CC = "C:/msys64/mingw64/bin/gcc.exe"
CXX = "C:/msys64/mingw64/bin/g++.exe"
CIBUILDWHEEL = "1"

[project]
name = "rmnpy"
version = "0.1.0"
description = "Python bindings for OCTypes, SITypes, and RMNLib C libraries for scientific computing with units and dimensional analysis"
readme = "README.md"
license = {text = "MIT"}
authors = [{name = "Philip Grandinetti", email = "grandinetti.1@osu.edu"}]
maintainers = [{name = "Philip Grandinetti", email = "grandinetti.1@osu.edu"}]
keywords = ["scientific-computing", "units", "dimensional-analysis", "c-extensions"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: C",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
]
requires-python = ">=3.12"
dependencies = [
    "numpy>=1.21",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov",
    "black",
    "flake8",
    "mypy",
]
docs = [
    "sphinx",
    "sphinx-rtd-theme",
]

[project.urls]
Homepage = "https://github.com/pjgrandinetti/RMNpy"
Documentation = "https://rmnpy.readthedocs.io/"
Repository = "https://github.com/pjgrandinetti/RMNpy"
Issues = "https://github.com/pjgrandinetti/RMNpy/issues"
